<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="approvalMapper">
	
	<!-- ResultMap 구역 -->
	<resultMap type="ApprovalFormDto" id="appFormResult">
		<id column="app_no" property="appNo"/>
		<result column="app_form_name" property="appFormName"/>
		<result column="app_form" property="appForm"/>
		<result column="app_category" property="appCategory"/>
		<result column="tmp" property="tmp"/>
	</resultMap>
	
	<resultMap type="ApprovalDocDto" id="appDocResult">
		<id column="doc_no" property="docNo"/>
		<result column="doc_content" property="docContent"/>
		<result column="doc_status" property="status"/>
		<result column="status_name" property="status"/>
		<result column="draft_date" property="draftDate"/>
		<result column="modify_date" property="modifyDate"/>
		<result column="pre_period" property="prePeriod"/>
		<result column="app_form_name" property="appNo"/>
		<result column="app_category" property="appCategory"/>
		<result column="doc_title" property="docTitle"/>
		<result column="history_count" property="historyCount"/>
		<result column="now_approver" property="nowApprover"/>
		<association resultMap="memberResult" property="drafter"/>
	</resultMap>
	
	<resultMap type="AttachDto" id="attachResult">
		<id column="file_no" property="fileNo"/>
		<result column="file_path" property="filePath"/>
		<result column="original_name" property="originalName"/>
		<result column="filesystem_name" property="filesystemName"/>
	</resultMap>
	
	<resultMap type="ApproverDto" id="approverResult">
		<id column="approver_no" property="approverNo"/>
		<result column="app_type" property="appType"/>
		<result column="app_yn" property="appYn"/>
		<result column="status_name" property="appType"/>
		<result column="app_date" property="appDate"/>
		<result column="is_approved" property="isApproved"/>
		<association resultMap="memberResult" property="approver"/>
	</resultMap>
	
	<resultMap type="ApprovalCommentDto" id="commentResult">
		<id column="comment_no" property="commentNo"/>
		<result column="app_type" property="appType"/>
		<result column="status_name" property="appType"/>
		<result column="app_yn" property="appYn"/>
		<result column="comment_date" property="commentDate"/>
		<result column="comment_content" property="commentContent"/>
		<association resultMap="memberResult" property="commenter"/>
	</resultMap>
	
	<resultMap type="ApprovalMyLineDto" id="myLineResult">
		<id column="line_no" property="lineNo"/>
		<result column="mem_no" property="memNo"/>
		<result column="line_title" property="lineTitle"/>
		<result column="enroll_date" property="enrollDate"/>
	</resultMap>
	
	<resultMap type="ApprovalMyLineMemberDto" id="myLineMemberResult">
		<result column="line_no" property="lineNo"/>
		<result column="app_type" property="appType"/>
		<result column="status_name" property="appType"/>
		<association resultMap="memberResult" property="approver"/>
	</resultMap>

	<resultMap type="MajorDto" id="majorResult">
		<id column="major_no" property="majorNo"/>
		<result column="major_name" property="majorName"/>
		<result column="status" property="status"/>
	</resultMap>
	
	<resultMap type="CollegeDto" id="collegeResult">
		<id column="col_no" property="colNo"/>
		<result column="col_name" property="colName"/>
		<collection resultMap="majorResult" property="majorList"/>
	</resultMap>
	
	<resultMap id="memberResult" type="MemberDto">
  	<id column="mem_no" property="memNo"/>
  	<result column="major_name" property="majorNo"/>
  	<result column="job_name" property="jobNo"/>
  	<result column="mem_name" property="memName"/>
  	<result column="sign_url" property="signUrl"/>
  	<result column="profile_url" property="profileUrl"/>
  	<result column="line_mem_no" property="profileUrl"/>
  </resultMap>
  
  
	<!-- 쿼리문 구역 -->
	<!-- 결재 양식 관련 -->
	<select id="selectAppCategory" resultType="String">
		select distinct app_category
		  from app_form
		 where tmp = 'N'
		 order
		    by app_category
	</select>
	
	<select id="selectCountAppFormName" resultType="_int">
		select count(*)
		  from app_form
		 where app_form_name = #{appFormName}
		   and tmp = 'N'
	</select>

	<insert id="insertAppForm">
		insert
			into app_form
					 (
					 	 app_no
					 , app_form_name
					 , app_form
					 , app_category
					 , tmp
					 )
		values (
						 seq_app_no.nextval
					 , #{appFormName}
					 , #{appForm}
					 , #{appCategory}
					 , #{tmp}
					 )
	</insert>
	
	<select id="selectCountAppFormList" resultType="_int">
		select 
		       count(*)
		  from app_form
		 where tmp = #{tmp}
		 <if test='category != "all"'>
			 and app_category = #{category}
		 </if>
		 <if test="search != ''">
			 and app_form_name like '%' || #{search} || '%'
		 </if>
	</select>
	
	<select id="selectAppFormList" resultMap="appFormResult">
		select 
		       app_no
		     , app_form_name
		     , app_category
		  from app_form
		 where tmp = #{tmp}
		 <if test='category != "all"'>
			 and app_category = #{category}
		 </if>
		 <if test="search != ''">
			 and app_form_name like '%' || #{search} || '%'
		 </if>
	</select>
	
	<update id="updateAppFormTmp">
		update app_form
		   set tmp = #{tmp}
		 where app_no = #{appNo}
	</update>
	
	<select id="selectAppFormByNo" resultMap="appFormResult">
		select 
		       app_no
		     , app_form_name
		     , app_form
		     , app_category
		     , tmp
		  from app_form
		 where app_no = #{no}
	</select>
	
	<update id="updateAppForm">
		update app_form
		   set app_form_name = #{appFormName}
				 , app_form = #{appForm}
				 , app_category = #{appCategory}
				 , tmp = #{tmp}
		 where app_no = #{appNo}
	</update>
	
	<!-- 전자결재 작성 관련 *****************************************-->
	<select id="selectCollegeMajorList" resultMap="collegeResult">
		select col_no
		     , col_name
		     , major_no
		     , major_name
		  from major
		  join college using (col_no)
		 where status = 'Y'
		   <if test="search != ''">
		   and major_name like '%' || #{search} || '%'
		   </if>
	</select>
	
	<select id="selectFormListByCategory" resultMap="appFormResult">
		select app_form_name
				 , app_no
		  from app_form
		 where tmp = 'N'
       and app_category = #{appCategory}
	</select>
	
	<select id="selectAppFormContent" resultType="String">
		select app_form
		  from app_form
		 where app_no = #{appNo}
	</select>
	
	<select id="selectMemberByMajor" resultMap="memberResult">
		select
           mem_no
         , major_name
         , job_name
         , mem_name
  		from member
  		join major on (member.major_no = major.major_no)
		  join job on (member.job_no = job.job_no)
  	 where member.status = 'N'
  	 	 and member.major_no = #{majorNo}
  	 	 and member.mem_no != #{memNo}
	</select>
	
	<select id="selectMemberBySearch" resultMap="memberResult">
		select
           mem_no
         , major_name
         , job_name
         , mem_name
  		from member
  		join major on (member.major_no = major.major_no)
		  join job on (member.job_no = job.job_no)
  	 where member.status = 'N'
  	 	 and mem_name like '%' || #{search} || '%'
  	 	 and member.mem_no != #{memNo}
	</select>
	
	<insert id="insertAppDoc">
		insert
		  into app_doc
		       (
		       doc_content
		     , drafter
		     , pre_period
		     , app_no
		     , doc_no
		     , doc_title
		     , status
		       )
		values (
		       #{docContent}
		     , #{drafterNo}
		     , #{prePeriod}
		     , #{appNo}
		     , seq_doc_no.nextval
		     , #{docTitle}
		     , #{status}
		       )
	</insert>
	
	<insert id="insertApprover">
		insert
		  into approver
		       (
		       approver_no
		     , approver
		     , doc_no
		     , app_type
		       )
		values (
		       seq_approver_no.nextval
		     , #{memNo}
		     <choose>
	       	 <when test="docNo == 0">
		     , seq_doc_no.currval
	       	 </when>
	       	 <otherwise>
	       , #{ docNo }
	       	 </otherwise>
	       </choose>
		     , #{appType}
		       )
	</insert>
	
	<insert id="insertAppAttach">
		insert
		  into app_attach
		       (
		       file_no
		     , doc_no
		     , file_path
		     , original_name
		     , filesystem_name
		       )
		values (
		       seq_app_file_no.nextval
	       <choose>
	       	 <when test="refNo == 0">
		     , seq_doc_no.currval
	       	 </when>
	       	 <otherwise>
	       , #{ refNo }
	       	 </otherwise>
	       </choose>
		     , #{filePath}
		     , #{originalName}
		     , #{filesystemName}
		       )
	</insert>
	
	<update id="updateAppDoc">
		update app_doc
		   set doc_content = #{docContent}
		     , pre_period = #{prePeriod}
		     , app_no = #{appNo}
		     , doc_title = #{docTitle}
		     , status = #{status}
		     , modify_date = sysdate
		 where doc_no = #{docNo}
	</update>
	
	<update id="updateAppDocContent">
		update app_doc
		   set doc_content = #{docContent}
		     , status = #{status}
		     , modify_date = sysdate
		 where doc_no = #{docNo}
	</update>
	
	<delete id="deleteApprover">
		delete
			from approver
		 where doc_no = #{docNo}
	</delete>
	
	<delete id="deleteAttach">
		delete
			from app_attach
	 <where>
			<foreach item="item" collection="array"
							open="file_no in (" separator="," close=")">
				#{item}
			</foreach>
		</where>
	</delete>
	
	<select id="selectDeleteAppAttachList" resultMap="attachResult">
		select
		       file_no
		     , file_path
		     , original_name
		     , filesystem_name
		  from app_attach
		<where>
			<foreach item="item" collection="array"
							open="file_no in (" separator="," close=")">
				#{item}
			</foreach>
		</where>
	</select>
	
	<!-- 전자결재 문서함 ************************************************* -->
	<select id="selectCountOngoingBoardList" resultType="_int">
		select count(*)
		  from app_doc
		  join app_form on (app_doc.app_no = app_form.app_no)
		 where drafter = #{loginUserNo}
		   and to_char(draft_date, 'YYYY-MM-DD') between #{startDate} and #{endDate}
		<choose>
			<when test="docStatus == ''">
		    and app_doc.status not in (0, 1, 2, 40)
			</when>
			<otherwise>
				and status = #{docStatus}
			</otherwise>
		</choose>
		<if test='category != "all"'>
			 and app_category = #{category}
		</if>
		<if test='status != "all"'>
		   and app_doc.status = #{status}
		</if>
		<if test="searchType == 'title'">
			 and doc_title like '%' || #{search} || '%'
		</if>
		<if test="searchType == 'no'">
			 and doc_no like '%' || #{search} || '%'
		</if>
	</select>
	
	<select id="selectOngoingDocList" resultMap="appDocResult">
		select doc_no
		     , doc_title
		     , to_char(draft_date, 'YYYY-MM-DD') draft_date
		     , app_category
		     , status_name
		  from app_doc
		  join app_status on (status = status_no)
		  join app_form on (app_doc.app_no = app_form.app_no)
		 where drafter = #{loginUserNo}
		   and to_char(draft_date, 'YYYY-MM-DD') between #{startDate} and #{endDate}
		<choose>
			<when test="docStatus == ''">
		    and app_doc.status not in (0, 1, 2, 40)
			</when>
			<otherwise>
				and status = #{docStatus}
			</otherwise>
		</choose>
		<if test="category != 'all'">
			 and app_category = #{category}
		</if>
		<if test='status != "all"'>
		   and app_doc.status = #{status}
		</if>
		<if test="search != ''">
			 and doc_title like '%' || #{search} || '%'
		</if>
		<if test="searchType == 'no'">
			 and doc_no like '%' || #{search} || '%'
		</if>
		order
		   by draft_date desc
	</select>
	
	<select id="selectCountReceiveBoardList" resultType="_int">
		select count(*)
		  from app_doc
		  join app_form on (app_doc.app_no = app_form.app_no)
		  join member on ( app_doc.drafter = member.mem_no )
     where (
			       select a.approver
			         from (
			               select approver
			                   , doc_no
			                   , ROW_NUMBER() OVER (PARTITION BY approver.doc_no ORDER BY app_type, approver) AS rnum
			                 from approver
			                where app_yn = 'N'
			              ) a
			        where rnum = 1
			          and doc_no = app_doc.doc_no
			   	 ) = #{loginUserNo}
		   and to_char(draft_date, 'YYYY-MM-DD') between #{startDate} and #{endDate}
		   and app_doc.status not in (0, 1, 2, 40)
		<if test='category != "all"'>
			 and app_category = #{category}
		</if>
		<if test='status != "all"'>
		   and app_doc.status = #{status}
		</if>
		<if test="searchType == 'title'">
			 and doc_title like '%' || #{search} || '%'
		</if>
		<if test="searchType == 'drafter'">
			 and mem_name like '%' || #{search} || '%'
		</if>
	</select>
	
	<select id="selectReceiveBoardList" resultMap="appDocResult">
		select doc_no
		     , doc_title
		     , to_char(draft_date, 'YYYY-MM-DD') draft_date
		     , app_category
		     , status_name
         , mem_name
		  from app_doc
		  join app_status on (status = status_no)
		  join app_form on (app_doc.app_no = app_form.app_no)
      join member on (drafter = mem_no)
     where (
            select a.approver
              from (
                    select approver
                        , doc_no
                        , ROW_NUMBER() OVER (PARTITION BY approver.doc_no ORDER BY app_type, approver) AS rnum
                      from approver
                     where app_yn = 'N'
                   ) a
             where rnum = 1
               and doc_no = app_doc.doc_no
        	 ) = #{loginUserNo}
		   and to_char(draft_date, 'YYYY-MM-DD') between #{startDate} and #{endDate}
		   and app_doc.status not in (0, 1, 2, 40)
		<if test='category != "all"'>
			 and app_category = #{category}
		</if>
		<if test='status != "all"'>
		   and app_doc.status = #{status}
		</if>
		<if test="searchType == 'title'">
			 and doc_title like '%' || #{search} || '%'
		</if>
		<if test="searchType == 'drafter'">
			 and mem_name like '%' || #{search} || '%'
		</if>
	</select>
	
	<!-- 전자결재 상세 페이지 ********************************-->
	<select id="selectAppDoc" resultMap="appDocResult">
		select 
		       doc_no
		     , doc_content
				 , app_category
		     , app_form_name
		     , drafter
		     , to_char(draft_Date, 'YYYY-MM-DD') draft_date
		     , to_char(modify_Date, 'YYYY-MM-DD') modify_date
		     , doc_title
		     , pre_period
		     , app_doc.status doc_status
		     , mem_no
		     , mem_name
		     , major_name
		     , sign_url
		     , job_name
         , (select count(*)
					   from approver
					  where app_yn = 'Y'
					    and doc_no = #{no}
           ) history_count
         , (
            select a.approver
              from (
                    select approver
                        , doc_no
                        , ROW_NUMBER() OVER (PARTITION BY approver.doc_no ORDER BY app_type, approver) AS rnum
                      from approver
                     where app_yn = 'N'
                   ) a
             where rnum = 1
               and doc_no = #{no}
            ) now_approver
		  from app_doc
		  join app_form using (app_no)
		  join member on (drafter = mem_no)
		  join major using (major_no)
		  join job using (job_no)
		  left join app_attach using (doc_no)
		 where doc_no = #{no}
		 order
		 	  by draft_date desc
	</select>
	
	<select id="selectAppAttachList" resultMap="attachResult">
		select
		       file_no
		     , file_path
		     , original_name
		     , filesystem_name
		  from app_attach
		 where doc_no = #{no}
	</select>
	
	<select id="selectAppCommentList" resultMap="commentResult">
		select
		       comment_no
		     , mem_no
		     , mem_name
		     , major_name
		     , job_name
		     , app_yn
		     , status_name
		     , comment_date
		     , comment_content
		  from app_comment
		  join member on (commenter = mem_no)
		  join major using (major_no)
		  join job using (job_no)
		  join app_status on (app_type = status_no)
		 where doc_no = #{no}
	</select>
	
	<select id="selectApproverByDocNo" resultMap="approverResult">
		select
		       mem_name
		     , mem_no
		     , major_name
		     , sign_url
		     , job_name
		     , app_yn
         , app_date
		  from approver
		  join member on (mem_no = approver)
		  join major using (major_no)
		  join job using (job_no)
		  join app_status on (app_type = status_no)
		 where doc_no = #{no}
           and app_type = #{appType}
		 order
		    by app_type, approver_no
	</select>
	
	<update id="updateAppDocStatus">
		update 
					 app_doc
			 set status = #{status}
		 where doc_no = #{docNo}
	</update>
	
	<insert id="insertAppComment">
		insert
		  into app_comment
		       (
		       comment_no
		     , commenter
         , app_type
         , app_yn
         , comment_content
		     , doc_no
		       )
		values (
		       seq_comment_no.nextval
		     , #{commenterNo}
		     , #{appType}
		     , #{appYn}
		     , #{commentContent}
         , #{docNo}
		       )
	</insert>
	
	<update id="updateApproverY">
		update 
					 approver
			 set app_yn = 'Y'
			   , app_date = sysdate
		 where doc_no = #{docNo}
		   and approver = #{memNo}
	</update>
	
	<select id="selectNowAppLine" resultType="String">
		select app_type
		 from (
		       select app_type
                    , ROW_NUMBER() OVER (PARTITION BY doc_no ORDER BY app_type, approver) AS rnum
		         from approver
		        where app_yn = 'N'
		          and doc_no = #{docNo}
		      )
		where rnum = 1
	</select>
	
	<!-- 자주 쓰는 결재선 *****************************-->
	<!-- 내 결재선 목록 -->
	<select id="selectCountAppLineList" resultType="_int">
		select count(*)
			from app_line
		 where mem_no = #{loginUserNo}
		   <if test="search != ''">
		   and line_title like '%' || #{search} || '%'
		   </if>
	</select>
	
	<select id="selectAppLineList" resultMap="myLineResult">
		select
					 line_no
				 , line_title
				 , to_char(enroll_date, 'YYYY-MM-DD') enroll_Date
			from app_line
		 where mem_no = #{loginUserNo}
		   <if test="search != ''">
		   and line_title like '%' || #{search} || '%'
		   </if>
		 order
		    by enroll_date desc
	</select>
	
	<!-- 결재선 등록 -->
	<insert id="insertAppLine">
		insert
			into app_line
					 (
					 	line_no,
					 	line_title,
					 	mem_no
					 )
		values (
						seq_line_no.nextval
					, #{lineTitle}
					, #{memNo}
					 )
	</insert>
	
	<insert id="insertAppLineMem">
		insert
			into app_line_mem
					 (
					  line_mem_no,
					 	line_no,
					 	app_type,
					 	approver
					 )
		values (
						seq_line_mem_no.nextval
					, seq_line_no.currval
					, #{appType}
					, #{approver}
					 )
	</insert>
	
	<delete id="deleteAppLine">
		delete
		  from app_line
		 where line_no = #{no}
	</delete>
	
	<!-- 결재선 수정 -->
	<select id="selectAppLineMem" resultMap="memberResult">
		select 
			     mem_no
         , mem_name
         , major_name
         , job_name
      from app_line_mem
      join member on (approver = mem_no)
      join job using (job_no)
      join major using (major_no)
     where line_no = #{no}
       and app_type = #{appType}
     order
        by line_mem_no
	</select>
	
</mapper>
