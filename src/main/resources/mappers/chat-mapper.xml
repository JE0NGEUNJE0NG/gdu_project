<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="chatMapper">


	<resultMap id="chatRoomResult" type="ChatRoomDto">
  	<id column="chro_no" property="chroNo"/>
  	<result column="chro_name" property="chroName"/>
  	<result column="lastmsg" property="lastMsg"/>
  	<result column="msg_date" property="msgDate"/>
  	<collection  resultMap="memberResult" property="memberList"/>
  </resultMap>
  
  <resultMap id="chatResult" type="ChatDto">
  	<id column="chat_no" property="chatNo"/>
  	<result column="chro_no" property="chroNo"/>
  	<result column="mem_no" property="memNo"/>
  	<result column="ch_content" property="chContent"/>
  	<result column="ch_date" property="chDate"/>
  	<result column="ch_read" property="chRead"/>
  	<result column="mem_name" property="memName"/>
  	<result column="profile_url" property="profileUrl"/>
  	<result column="job_name" property="jobName"/>
  </resultMap>
  
  <resultMap id="memberResult" type="MemberDto">
  	<id column="mem_no" property="memNo"/>
  	<result column="chatmem" property="memName"/>
  	<result column="mem_name" property="memName"/>
  	<result column="profile_url" property="profileUrl"/>
  	<result column="job_name" property="jobNo"/>
  </resultMap>
  
  

	<!-- 채팅방 생성 -->
	<insert id="insertChatRoom">
		DECLARE
            last_number NUMBER := 0;
        BEGIN
            SELECT NVL(MAX(SUBSTR(chro_name, 9)), 0) INTO last_number
            FROM chatroom
            WHERE chro_name LIKE 'chatRoom%';
            
            INSERT INTO chatroom (chro_no, chro_name)
            VALUES (seq_chro_no.nextval, 'chatRoom' || (last_number + 1));
        END;
	</insert>
	
	<insert id="insertChatMem">
		insert
		 	into chat_mem
		 	(
		 		chro_no
		 	, mem_no
		 	)
		 	values
		 	(
		 		seq_chro_no.currval
		 	, #{memNo}
		 	)
	</insert>
	
	<select id="getLastChatRoomNo" resultType="_int">
		SELECT seq_chro_no.currval FROM dual
	</select>
	
	<!-- 채팅방 목록 조회 -->
	<select id="selectChatRoomList" resultMap="chatRoomResult">
		SELECT DISTINCT r.CHRO_NO
				 , r.CHRO_NAME
				 , r.LASTMSG
				 , m.MEM_NAME AS chatmem
				 , m.profile_url
				 , TO_CHAR(msg_date, 'HH24:MI') as msg_date
				 , j.job_name
			FROM chatroom r
			JOIN chat_mem m1 ON r.CHRO_NO = m1.CHRO_NO
			JOIN chat_mem m2 ON r.CHRO_NO = m2.CHRO_NO
			JOIN member m ON m2.MEM_NO = m.MEM_NO
			JOIN JOB j on m.job_no = j.job_no
		 WHERE m1.MEM_NO = #{memNo}
			 AND m2.MEM_NO != #{memNo}
		 order by r.chro_no desc
	</select>
	
	<!-- 채팅 메세지 등록 -->
	<insert id="insertMessage">
		insert
		 	into chat
		 	(
		 		chat_no
		  , chro_no
		 	, mem_no
		 	, ch_content
		 	, ch_date
		 	)
		 	values
		 	(
		 		seq_chat_no.nextval
		 	, #{chroNo}
		 	, #{memNo}
		 	, #{chContent}
		 	, SYSDATE
		 	)
	</insert>
	
	<update id="updateMessage">
	 update
	 			chatroom
	 		set lastmsg = #{chContent}
	 		  , msg_date = SYSDATE
	 		where chro_no = #{chroNo}
	</update>
	
	<!-- 채팅 메세지 조회 -->
	<select id="selectChatList" resultMap="chatResult">
		SELECT 
				chat_no
			, chro_no
			, c.mem_no
			, ch_content
			, TO_CHAR(ch_date, 'HH24:MI') as ch_date
			, ch_read
			, mem_name
      , profile_url
      , j.job_name
			FROM chat c
			join member m on(c.mem_no = m.mem_no)
			join job j on m.job_no = j.job_no
		 WHERE chro_no = #{chroNo}
		 order by chat_no
	</select>
	
	<!-- 채팅 멤버 초대 -->
	<insert id="insertAddMem">
		insert
		 	into chat_mem
		 	(
		    chro_no
		 	, mem_no
		 	)
		 	values
		 	(
		    #{chroNo}
		 	, #{memNo}
		 	)
	</insert>
	
	<!-- 채팅방 멤버 조회 -->
	<select id="selectChatRoomMem" resultMap="memberResult">
	SELECT 
				   m.MEM_NAME 
				 , c.mem_no
				 , m.profile_url
				 , j.job_name
			FROM chat_mem c
			JOIN member m ON c.MEM_NO = m.MEM_NO
			JOIN JOB j on m.job_no = j.job_no
		 WHERE chro_no = #{chroNo}
	</select>
</mapper>
