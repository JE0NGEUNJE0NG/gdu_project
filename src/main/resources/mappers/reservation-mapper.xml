<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="reservationMapper">
	
	<resultMap type="ReservationDto" id="reservationResult">
		<id column="rev_no" property="revNo"/>
		<result column="rev_reason" property="revReason"/>
		<result column="rev_date" property="revDate"/>
		<result column="start_time" property="startTime"/>
		<result column="end_time" property="endTime"/>
		<result column="regist_date" property="registDate"/>
		<result column="status" property="status"/>
		<result column="mem_no" property="memNo"/>
		<result column="mem_name" property="memName"/>
		<result column="res_name" property="resNo"/>
		<result column="res_type" property="resType"/>
		<result column="rev_count" property="revCount"/>
	</resultMap>
	
	<resultMap type="ResourceDto" id="resourceResult">
		<id column="res_no" property="resNo"/>
		<result column="res_Type" property="resType"/>
		<result column="res_name" property="resName"/>
		<result column="res_detail" property="resDetail"/>
		<result column="use_status" property="useStatus"/>
		<result column="res_gps" property="resGps"/>
		<result column="regist_date" property="registDate"/>
		<result column="mod_date" property="modifyDate"/>
		<result column="stock" property="stock"/>
		<result column="status" property="status"/>
		<result column="del_content" property="delContent"/>
	</resultMap>

	<!-- 김영주 -->

	<!-- 나의 예약 목록 -->
	<select id="searchReservationList" resultMap="reservationResult">
		select
		       rev_no
		     , res_name
		     , res_type
		     , mem_name
		     , rev_reason
		     , rev_date
		     , start_time
		     , end_time
		     , rev_count
		     , to_char(rev.regist_date, 'YYYY-MM-DD') regist_date
		     , rev.status
		  from reservation rev
		  join member m on (m.mem_no = rev.mem_no)
		  join resources res on (rev.res_no = res.res_no)
		  <where>
		   rev.status in ('1', '2')
		   and rev.mem_no = #{memNo}
		   <if test='keyword != null || !keyword.equals("")'>
		   	and res_name like '%' || #{keyword} || '%'
		   </if>
		   <if test='condition != 0'>
		   		and res_type = #{condition}
	   	 </if>
		  </where>
		  order 
		     by rev_no       
	</select>
	
	<select id="searchReservationListCount" resultType="_int">
		select
		       count(*)
		  from reservation rev
		  join member m on (m.mem_no = rev.mem_no)
		  join resources res on (rev.res_no = res.res_no)  
		  <where>
		   rev.status in ('1', '2')
		   and rev.mem_no = #{memNo}
		   <if test='keyword != null || !keyword.equals("")'>
		   	and res_name like '%' || #{keyword} || '%'
		   </if>
		   <if test='condition != 0'>
		   	and res_type = #{condition}
		   </if>
		  </where>
	</select>
	
	<!-- 미반납 목록 -->
	<select id="selectUnreturnedList" resultMap="reservationResult">
		select
		       rev_no
		     , res_name
		     , mem_name
		     , rev_reason
		     , rev_date
		     , rev_count
		     , to_char(rev.regist_date, 'YYYY-MM-DD') regist_date
		     , rev.status
		  from reservation rev
		  join member m on (m.mem_no = rev.mem_no)
		  join resources res on (rev.res_no = res.res_no)
		 where rev.status = '1'
		   and res_type = '4'
		   and rev.mem_no = #{memNo}
		 order
		    by rev_no
	</select>
	
	<!-- 미반납 목록 개수 -->
	<select id="selectUnreturnedListCount" resultType="_int">
		select
		       count(*) count
		  from reservation rev 
		  join member m on (m.mem_no = rev.mem_no)
		  join resources res on (rev.res_no = res.res_no)
		 where rev.status = '1'
		   and res_type = '4'
		   and rev.mem_no = #{memNo}    
	</select>
	
	<!-- 시설 예약 -->
	<insert id="insertReservation">
		insert
		  into reservation
		  (
		  	rev_no
		  , rev_reason
		  , rev_date
		  , start_time
		  , end_time
		  , mem_no
		  , res_no
		  )
		  values
		  (
		  	seq_rev_no.nextval
		  ,	#{revReason}
		  , #{revDate}
		  , #{startTime}
		  , #{endTime}
		  , #{memNo}
		  , #{resNo}
		  )
	</insert>
	
	<!-- 예약 수정 -->
	<update id="updateReservation">
		update
		       reservation
		   set rev_reason = #{rev_reason}
		     , rev_date = #{revDate}
		     , start_time = #{startTime}
		     , end_time = #{endTime}
		 where rev_no = #{revNo}    
		         
	</update>
	
	<!-- 예약 취소 -->
	<update id="deleteReservation">
		update 
		       reservation
		   set status = '3'
		 where rev_no = #{revNo}       
	</update>
	
	<!-- 시설 목록 조회 -->
	<select id="searchFacilityList" resultMap="resourceResult">
		select 
		       res_no
		     , res_type
		     , res_name
		     , res_detail
		     , res_gps
		  from resources
		  <where>
		  	use_status = 'Y'
		  	<if test='keyword != null || !keyword.equals("")'>
			   	and res_name like '%' || #{keyword} || '%'
		   	</if>
		   	<choose>
			   	<when test="condition != 0">
			   		and res_type = #{condition}
			   	</when>
			   	<otherwise>
			   		and res_type in ('1', '2', '3')
			   	</otherwise>
			  </choose>
		  </where> 
		  order
		     by res_no    
	</select>
	
	<!-- 비품 목록 조회 -->
	<select id="searchEquipmentList" resultMap="resourceResult">
		select 
		       res_no
		     , res_type
		     , res_name
		     , res_detail
		     , res_gps
		     , stock
		  from resources
		  <where>
		  	use_status = 'Y'
		  	and res_type = '4'
		  	<if test='keyword != null || !keyword.equals("")'>
			   	and res_name like '%' || #{keyword} || '%'
		   	</if>
		 	</where>
	</select>
	
	<!-- 시설 조회 -->
	<select id="selectResource" resultMap="resourceResult">
		select
		       res_no
		     , res_type
		     , res_name
		     , res_detail
		     , res_gps
		  from resources
		 where res_no = #{resNo} 
	</select>
	
	<select id="selectReservaionListByResNo" resultMap="reservationResult">
		select
		       rev_no
		     , rev_reason
		     , rev_date
		     , start_time
		     , end_time
		     , rev.status
		     , rev.mem_no
		     , mem_name
		  from reservation rev
		  join member m on (m.mem_no = rev.mem_no)
		 where rev.status in ('1', '2')
		   and res_no = #{resNo}  
		       
	</select>
	
	
	






































	<!-- 김영주 -->









</mapper>
